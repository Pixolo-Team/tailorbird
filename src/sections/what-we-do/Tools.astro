---
const designSolutions = [
  { src: "/images/design-solutions/3d.svg", name: "3D" },
  { src: "/images/design-solutions/ae.svg", name: "After Effects" },
  { src: "/images/design-solutions/browzwear.svg", name: "Browzwear" },
  { src: "/images/design-solutions/fermat.svg", name: "Fermat AI" },
  { src: "/images/design-solutions/illustrator.svg", name: "Illustrator" },
  { src: "/images/design-solutions/indesign.svg", name: "InDesign" },
  { src: "/images/design-solutions/lightroom.svg", name: "Lightroom" },
  { src: "/images/design-solutions/photoshop.svg", name: "Photoshop" },
  { src: "/images/design-solutions/premiere.svg", name: "Premiere Pro" },
];

const tradeSolutions = [
  "/images/trade-solutions/apparel.svg",
  "/images/trade-solutions/excel.svg",
  "/images/trade-solutions/exenta.svg",
  "/images/trade-solutions/fastrak.svg",
  "/images/trade-solutions/fineline.svg",
  "/images/trade-solutions/foxpro.svg",
  "/images/trade-solutions/image 198.svg",
  "/images/trade-solutions/image 199.svg",
  "/images/trade-solutions/image 200.svg",
  "/images/trade-solutions/image 201.svg",
  "/images/trade-solutions/nexgen.svg",
  "/images/trade-solutions/ont.svg",
];
---

<section class="relative">
  <div class="inner-container container m-auto">
    <div class="fade-in flex flex-col gap-2 px-4 md:gap-4 md:px-8">
      <p class="text-n-900 text-3xl font-bold md:text-6xl">
        The stack behind the <span class="text-blue-500">STYL</span>
      </p>
      <p class="text-n-950 text-lg font-normal md:text-xl">
        The right tools for the right outcomes.
      </p>
    </div>

    <divn class="mt-5 md:mt-20">
      <!-- Design Solutions -->

      <!-- Grid Background  -->
      <!-- <div class="border-n-300 gradient relative flex flex-wrap">
          {
            [...Array(14).keys()].map((_, index) => (
              <div class="border-n-300 h-[200px] w-[200px] border-r border-b" />
            ))
          }
        </div> -->

      <!-- Design Solution  -->
      <div
        class="flex flex-wrap justify-center gap-x-2 gap-y-6 md:justify-start lg:gap-x-0 lg:gap-y-0 lg:px-0"
      >
        <!-- Design Solutions  -->
        <div
          class="flex h-[100px] w-full items-center justify-start lg:h-[200px] lg:w-[400px]"
        >
          <!-- Title  -->
          <p class="title text-2xl font-bold text-blue-500 md:text-3xl">
            Design Solutions
          </p>
        </div>

        {
          designSolutions.map((tool) => (
            <div class="flex w-[30%] flex-col items-center justify-center gap-6 md:w-[23%] lg:h-[200px] lg:w-[200px]">
              <img src={tool.src} alt={tool.name} />
              <p class="text-n-600 text-center text-sm md:text-lg">
                {tool.name}
              </p>
            </div>
          ))
        }
      </div>

      <!-- Trade Solutions  -->
      <div
        class="mt-20 flex flex-wrap justify-center gap-x-2 gap-y-6 md:justify-start lg:gap-x-0 lg:gap-y-0 lg:px-0"
      >
        <!-- Trade Solutions  -->
        <div
          class="flex h-[100px] w-full items-center justify-start lg:h-[200px] lg:w-[400px]"
        >
          <p class="title text-2xl font-bold text-blue-500 md:text-3xl">
            Trade Solutions
          </p>
        </div>

        <!-- Loop through Images  -->

        {
          tradeSolutions.map((src) => (
            <div class="flex h-[150px] w-[30%] flex-col items-center justify-center gap-6 md:w-[23%] lg:h-[200px] lg:w-[200px]">
              <img src={src} alt="" />
            </div>
          ))
        }
      </div>
    </divn>
  </div>

  <!-- Tools text -->
  <p
    class="fade-in-left absolute top-[40%] right-[46px] hidden origin-right -translate-y-1/2 -rotate-90 rotate-[-90deg] text-9xl font-bold text-blue-500 xl:block"
  >
    TOOLS
  </p>
</section>

<script is:inline>
  window.addEventListener("DOMContentLoaded", () => {
    const titles = document.querySelectorAll(".title");
    const io = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-line");
          }
        });
      },
      { threshold: 0.5 }
    );
    titles.forEach((title) => io.observe(title));
  });
</script>

<style>
  .title {
    position: relative;
  }
  .title::after {
    content: "";
    position: absolute;
    left: 105%;
    bottom: 7px;
    width: 0;
    height: 5px;
    background-color: var(--color-blue-500, #3b82f6);
    border-radius: 4px;
    transition: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .title.animate-line::after {
    width: 45%;
  }
</style>
