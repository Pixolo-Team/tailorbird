---
const { photos } = Astro.props as {
  photos: { url: string; caption?: string }[];
};
---

<section class="tb-slider">
  <div class="inner-container relative container mx-auto">
    <div class="mb-14">
      <p
        class="text-n-950 text-3xl leading-none font-bold md:text-4xl md:tracking-[-2px] lg:text-6xl"
      >
        Crafted With Precision
      </p>
      <p
        class="text-n-700 mt-2 w-[90%] text-lg leading-normal font-normal md:mt-3 md:text-xl"
      >
        A closer look at the quality behind every project
      </p>
    </div>

    <!-- Embla viewport -->
    <div id="embla" class="overflow-hidden">
      <!-- Embla container -->
      <div class="flex gap-4">
        {
          photos.map((item) => (
            <div class="tb-slide">
              <div
                class="relative overflow-hidden rounded-3xl"
                style="height: var(--slide-h)"
              >
                <img
                  src={item.url}
                  alt={item.caption ?? "Service Image"}
                  loading="lazy"
                  decoding="async"
                  class="h-full w-full object-cover"
                />
              </div>
              <p class="text-n-700 px-2.5 py-4 text-lg font-normal">
                {item.caption}
              </p>
            </div>
          ))
        }
      </div>
    </div>

    <!-- Prev / Next buttons -->
    <div class="flex justify-end gap-5 pt-5">
      <button
        id="prev"
        aria-label="Previous"
        class="border-n-300 flex h-10 w-10 cursor-pointer items-center justify-center rounded-full border"
        type="button"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="9"
          height="14"
          viewBox="0 0 9 14"
          fill="none"
        >
          <path
            d="M7.70607 2.37423C8.28595 2.05208 8.49499 1.3212 8.17296 0.741288C7.85081 0.161414 7.11993 -0.0476322 6.54002 0.274399C5.58614 0.804332 4.15889 1.7217 2.95272 2.77777C2.3505 3.30506 1.76775 3.89734 1.32682 4.52215C0.899117 5.12824 0.516212 5.89024 0.516212 6.72991C0.516212 7.56958 0.899117 8.33157 1.32682 8.93766C1.76775 9.56248 2.3505 10.1547 2.95272 10.682C4.15889 11.7381 5.58614 12.6555 6.54002 13.1854C7.11993 13.5074 7.85081 13.2984 8.17296 12.7185C8.49499 12.1386 8.28595 11.4077 7.70607 11.0856C6.85817 10.6145 5.5824 9.7901 4.53639 8.87431C4.0127 8.41579 3.58158 7.96454 3.29057 7.55224C2.98626 7.12101 2.9187 6.85123 2.9187 6.72991C2.9187 6.60858 2.98626 6.3388 3.29057 5.90757C3.58158 5.49527 4.0127 5.04402 4.53639 4.5855C5.5824 3.66972 6.85817 2.8453 7.70607 2.37423Z"
            fill="#324158"></path>
        </svg>
      </button>
      <button
        id="next"
        aria-label="Next"
        class="border-n-300 flex h-10 w-10 cursor-pointer items-center justify-center rounded-full border"
        type="button"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="9"
          height="14"
          viewBox="0 0 9 14"
          fill="none"
        >
          <path
            d="M1.12401 2.37618C0.544132 2.05403 0.335086 1.32315 0.657116 0.743241C0.979269 0.163367 1.71015 -0.0456791 2.29006 0.276352C3.24394 0.806285 4.67118 1.72365 5.87736 2.77972C6.47958 3.30702 7.06233 3.89929 7.50326 4.52411C7.93096 5.1302 8.31387 5.89219 8.31387 6.73186C8.31387 7.57153 7.93096 8.33352 7.50326 8.93961C7.06233 9.56443 6.47958 10.1567 5.87736 10.684C4.67118 11.7401 3.24394 12.6574 2.29006 13.1874C1.71015 13.5094 0.979269 13.3004 0.657116 12.7205C0.335086 12.1406 0.544132 11.4097 1.12401 11.0875C1.97191 10.6165 3.24768 9.79205 4.29369 8.87627C4.81738 8.41775 5.2485 7.96649 5.53951 7.55419C5.84382 7.12296 5.91138 6.85318 5.91138 6.73186C5.91138 6.61053 5.84382 6.34076 5.53951 5.90952C5.2485 5.49723 4.81738 5.04597 4.29369 4.58745C3.24768 3.67167 1.97191 2.84725 1.12401 2.37618Z"
            fill="#324158"></path>
        </svg>
      </button>
    </div>
  </div>
</section>

<script>
  import EmblaCarousel from "embla-carousel";
  import Autoplay from "embla-carousel-autoplay";

  window.addEventListener("DOMContentLoaded", () => {
    const viewport = document.getElementById("embla");
    const plugins = [
      Autoplay({
        stopOnMouseEnter: true,
      }),
    ];
    if (!viewport) return;
    const embla = EmblaCarousel(
      viewport,
      {
        align: "start",
        loop: false,
        containScroll: "trimSnaps",
        dragFree: true,
      },
      plugins,
    );

    const prevBtn = document.getElementById("prev");
    const nextBtn = document.getElementById("next");

    if (prevBtn) prevBtn.addEventListener("click", () => embla.scrollPrev());
    if (nextBtn) nextBtn.addEventListener("click", () => embla.scrollNext());
  });
</script>

<style>
  /* Slider layout variables */
  .tb-slider {
    /* defaults: mobile */
    --slides: 1;
    --gap: 16px; /* matches gap-4 */
    --peek: 56px; /* visible portion of next slide */
    --slide-h: 260px;
  }

  @media (min-width: 640px) {
    .tb-slider {
      --slides: 2;
      --peek: 56px;
      --slide-h: 320px;
    }
  }

  @media (min-width: 1024px) {
    .tb-slider {
      --slides: 3;
      --peek: 60px; /* slightly more peek on desktop */
      --slide-h: 360px;
    }
  }

  /* Each slide gets a calculated width so N fit with a peek of the next */
  .tb-slide {
    flex: 0 0
      calc(
        (100% - (var(--gap) * (var(--slides) - 1)) - var(--peek)) /
          var(--slides)
      );
  }
</style>
