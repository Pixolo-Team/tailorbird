---
// TYPES //
import type { Stats } from "../../types/home";

// COMPONENTS //
import BrandLogo from "../../components/BrandLogo.astro";

const { stats } = Astro.props as { stats: Stats };
---

<section class="bg-n-50 w-full">
  <div
    class="inner-container container mx-auto flex flex-col gap-6 md:gap-7 lg:gap-16"
  >
    <div class="flex flex-col gap-4 lg:gap-7">
      <div class="flex items-baseline gap-1 md:gap-1.5">
        <!-- Brand Logo -->
        <BrandLogo variant="default" classes="w-38 md:w-88 lg:w-70" />
        <!-- Dot -->
        <span class="size-1.5 rounded-full bg-blue-500"></span>
        <!-- Scorecard text -->
        <p class="text-sm leading-0 font-normal tracking-widest md:text-2xl">
          Scorecard
        </p>
      </div>

      <!-- Subtitle -->
      <div class="flex items-center gap-2 md:gap-4 lg:gap-6">
        <!-- Text one -->
        <p class="text-xs font-extralight md:text-xl lg:text-4xl">Real stats</p>
        <span class="bg-n-950 size-1 rounded-full md:size-1.5"></span>
        <!-- Text Two -->
        <p class="text-xs font-extralight md:text-xl lg:text-4xl">
          Real results
        </p>
        <span class="bg-n-950 size-1 rounded-full md:size-1.5"></span>
        <!-- Text Three -->
        <p class="text-xs font-extralight md:text-xl lg:text-4xl">
          Real stories
        </p>
      </div>
    </div>

    <!-- Stats List -->
    <div class="mx-auto flex w-full flex-col gap-3.5 sm:gap-0 lg:w-5/6">
      {
        stats.numbers &&
          stats.numbers.length > 0 &&
          stats.numbers.map((statItem) => (
            <div
              class="text-n-500 flex items-center justify-between border-b border-dashed py-4 md:px-2.5 md:py-7 lg:px-5 lg:py-9"
              style=" border-image: repeating-linear-gradient(to right, currentColor 0, currentColor 5px, transparent 5px, transparent 10px) 1;"
            >
              {/* Stats number */}
              <p class="text-n-950 text-center text-2xl font-normal md:w-1/6 md:text-3xl lg:text-5xl">
                <span class="stat-count" data-target={statItem.number}>
                  0
                </span>
                <span>{statItem.suffix}</span>
              </p>
              {/* Stats title */}
              <p class="text-n-950 text-center text-sm font-normal md:w-2/4 md:text-base lg:text-xl">
                {statItem.name}
              </p>
              {/* Stats description */}
              <p class="text-n-500 hidden text-xs leading-loose font-normal sm:block sm:w-1/3 md:w-1/2 lg:text-base">
                {statItem.description}
              </p>
            </div>
          ))
      }
    </div>
  </div>

  <script is:inline type="module">
    import { animate } from "https://cdn.jsdelivr.net/npm/motion@12.23.12/+esm";
    // Get all counters
    const counters = Array.from(document.querySelectorAll(".stat-count"));

    /** Start Counter */
    const startCounter = (el) => {
      const raw = el.getAttribute("data-target") || "";
      const match = raw
        .toString()
        .trim()
        .match(/^(\d+)(.*)$/);
      const end = match ? parseInt(match[1], 10) : 0;

      // Animate
      animate(0, end, {
        duration: 2,
        easing: "circOut",
        onUpdate: (latest) => {
          el.textContent = Math.round(latest);
        },
      });
    };

    // Animate when in view
    const once = new WeakSet();
    const io = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting && !once.has(entry.target)) {
            once.add(entry.target);
            startCounter(entry.target);
          }
        });
      },
      { threshold: 0.3 },
    );

    counters.forEach((el) => io.observe(el));
  </script>
</section>
